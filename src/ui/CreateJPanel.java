/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ui;

import javax.swing.JOptionPane;
import model.Uber;
import model.UberHistory;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;

/**
 *
 * @author Sri Vyshnavi
 */
public class CreateJPanel extends javax.swing.JPanel {

    /**
     * Creates new form CreateJPanel
     */
    UberHistory history;
            
    public CreateJPanel(UberHistory history) {
        initComponents();
        this.history = history;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnTitle = new javax.swing.JLabel();
        lblCarModelNum = new javax.swing.JLabel();
        lblCarSerialNum = new javax.swing.JLabel();
        lblCarManufacturer = new javax.swing.JLabel();
        lblManufacturedDate = new javax.swing.JLabel();
        lblSeatCapacity = new javax.swing.JLabel();
        lblUsedBy = new javax.swing.JLabel();
        lblCity = new javax.swing.JLabel();
        lblMaintenanceCertExpDate = new javax.swing.JLabel();
        txtModelNum = new javax.swing.JTextField();
        txtSerialNum = new javax.swing.JTextField();
        txtManufacturer = new javax.swing.JTextField();
        txtManufacturedDate = new javax.swing.JTextField();
        txtSeatCapacity = new javax.swing.JTextField();
        txtUsedByPF = new javax.swing.JTextField();
        txtCity = new javax.swing.JTextField();
        txtMaintenanceCertExpDate = new javax.swing.JTextField();
        btnSave = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        chkboxAvailable = new java.awt.Checkbox();
        lblmodelErr = new javax.swing.JLabel();
        lblSNErr = new javax.swing.JLabel();
        lblManErr = new javax.swing.JLabel();
        lblManDateVali = new javax.swing.JLabel();
        lblSeatCapVali = new javax.swing.JLabel();
        lblPFVali = new javax.swing.JLabel();
        lblcityVali = new javax.swing.JLabel();
        lblmanDateExpvali = new javax.swing.JLabel();

        setBackground(new java.awt.Color(241, 205, 178));

        btnTitle.setFont(new java.awt.Font("Academy Engraved LET", 3, 18)); // NOI18N
        btnTitle.setText("CREATE");

        lblCarModelNum.setBackground(new java.awt.Color(204, 255, 204));
        lblCarModelNum.setForeground(new java.awt.Color(51, 51, 51));
        lblCarModelNum.setText("Model Name");

        lblCarSerialNum.setBackground(new java.awt.Color(204, 255, 204));
        lblCarSerialNum.setForeground(new java.awt.Color(51, 51, 51));
        lblCarSerialNum.setText("Serial Number");

        lblCarManufacturer.setBackground(new java.awt.Color(204, 255, 204));
        lblCarManufacturer.setForeground(new java.awt.Color(51, 51, 51));
        lblCarManufacturer.setText("Manufacturer");

        lblManufacturedDate.setBackground(new java.awt.Color(204, 255, 204));
        lblManufacturedDate.setForeground(new java.awt.Color(51, 51, 51));
        lblManufacturedDate.setText("Manufactured Date");

        lblSeatCapacity.setBackground(new java.awt.Color(204, 255, 204));
        lblSeatCapacity.setForeground(new java.awt.Color(51, 51, 51));
        lblSeatCapacity.setText("Seat Capacity");

        lblUsedBy.setBackground(new java.awt.Color(204, 255, 204));
        lblUsedBy.setForeground(new java.awt.Color(51, 51, 51));
        lblUsedBy.setText("Company Name");

        lblCity.setBackground(new java.awt.Color(204, 255, 204));
        lblCity.setForeground(new java.awt.Color(51, 51, 51));
        lblCity.setText("City");

        lblMaintenanceCertExpDate.setBackground(new java.awt.Color(204, 255, 204));
        lblMaintenanceCertExpDate.setForeground(new java.awt.Color(51, 51, 51));
        lblMaintenanceCertExpDate.setText("Maintenance Certificate Expirarion Date");

        txtModelNum.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtModelNumActionPerformed(evt);
            }
        });
        txtModelNum.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtModelNumKeyPressed(evt);
            }
        });

        txtSerialNum.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtSerialNumKeyPressed(evt);
            }
        });

        txtManufacturedDate.setToolTipText("Please enter the date  MM/dd/yyyy");
        txtManufacturedDate.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtManufacturedDateKeyPressed(evt);
            }
        });

        txtSeatCapacity.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtSeatCapacityKeyPressed(evt);
            }
        });

        txtUsedByPF.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtUsedByPFKeyPressed(evt);
            }
        });

        txtCity.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtCityKeyPressed(evt);
            }
        });

        txtMaintenanceCertExpDate.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtMaintenanceCertExpDateKeyPressed(evt);
            }
        });

        btnSave.setBackground(new java.awt.Color(204, 255, 204));
        btnSave.setForeground(new java.awt.Color(51, 51, 51));
        btnSave.setText("Save");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        jLabel1.setBackground(new java.awt.Color(204, 255, 204));
        jLabel1.setForeground(new java.awt.Color(51, 51, 51));
        jLabel1.setText("Availibity");

        chkboxAvailable.setLabel("Yes");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblMaintenanceCertExpDate)
                    .addComponent(jLabel1))
                .addGap(36, 36, 36)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(44, 44, 44)
                        .addComponent(btnSave, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(137, 382, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(17, 17, 17)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(chkboxAvailable, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(437, 437, 437)
                                .addComponent(lblmanDateExpvali, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addContainerGap())))
            .addGroup(layout.createSequentialGroup()
                .addGap(107, 107, 107)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblManufacturedDate)
                    .addComponent(lblCarSerialNum)
                    .addComponent(lblCarModelNum)
                    .addComponent(lblCarManufacturer)
                    .addComponent(lblSeatCapacity)
                    .addComponent(lblUsedBy)
                    .addComponent(lblCity))
                .addGap(56, 56, 56)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(txtModelNum)
                            .addComponent(txtSerialNum)
                            .addComponent(txtManufacturer)
                            .addComponent(txtManufacturedDate)
                            .addComponent(txtSeatCapacity)
                            .addComponent(txtUsedByPF)
                            .addComponent(txtCity, javax.swing.GroupLayout.DEFAULT_SIZE, 187, Short.MAX_VALUE)
                            .addComponent(txtMaintenanceCertExpDate, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(lblManDateVali, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(24, 24, 24)
                                        .addComponent(lblmodelErr, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(lblManErr, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(68, 68, 68)
                                        .addComponent(lblSNErr, javax.swing.GroupLayout.PREFERRED_SIZE, 256, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(0, 0, Short.MAX_VALUE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(lblSeatCapVali, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(lblPFVali, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(lblcityVali, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                .addContainerGap())))))
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {txtCity, txtManufacturedDate, txtManufacturer, txtModelNum, txtSeatCapacity, txtSerialNum, txtUsedByPF});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addComponent(btnTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCarModelNum)
                    .addComponent(txtModelNum, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblmodelErr))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCarSerialNum)
                    .addComponent(txtSerialNum, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblSNErr))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCarManufacturer)
                    .addComponent(txtManufacturer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblManErr))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblManufacturedDate)
                    .addComponent(txtManufacturedDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblManDateVali))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblSeatCapacity)
                    .addComponent(txtSeatCapacity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblSeatCapVali))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblUsedBy)
                    .addComponent(txtUsedByPF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblPFVali))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCity)
                    .addComponent(txtCity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblcityVali))
                .addGap(11, 11, 11)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblMaintenanceCertExpDate)
                    .addComponent(txtMaintenanceCertExpDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblmanDateExpvali))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(chkboxAvailable, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20)
                .addComponent(btnSave)
                .addContainerGap(53, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void txtModelNumActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtModelNumActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtModelNumActionPerformed

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        // TODO add your handling code here:
        
        LocalDate todaysDate = LocalDate.now();
        boolean available = chkboxAvailable.getState();
        DateTimeFormatter dformatter = DateTimeFormatter.ofPattern("MM/dd/yyyy");
        LocalDate localDate = LocalDate.parse(txtManufacturedDate.getText(), dformatter);
        LocalDate manufacturedDate = localDate;
        
        LocalDate localDateCerExp = LocalDate.parse(txtMaintenanceCertExpDate.getText(), dformatter);
        DateTimeFormatter formatter = DateTimeFormatter.ofPattern("MM/dd/yyyy");
        
        java.util.Date date=new java.util.Date(); 
        String modelName = (txtModelNum.getText());
        int vinNumber = Integer.parseInt(txtSerialNum.getText());  
        String manufacturer = txtManufacturer.getText();
        int seatCapacity = Integer.parseInt(txtSeatCapacity.getText());
        String usedBy = txtUsedByPF.getText();
        String lastUpdated = String.valueOf(date);
        String city = txtCity.getText();
        LocalDate manDate = LocalDate.parse(txtMaintenanceCertExpDate.getText(), formatter);
        LocalDate maintenanceCertExpDate = localDate;
        Boolean IsAvailable = chkboxAvailable.getState();

        Uber c = history.addNewCars();
        
        c.setModelName(modelName);
        c.setvinNumber(vinNumber);
        c.setManufacturer(manufacturer);
        c.setManufacturedDate(manufacturedDate);
        c.setSeatCapacity(seatCapacity);
        c.setUsedBy(usedBy);
        c.setIsAvailable(IsAvailable);
        c.setLastUpdated(lastUpdated);
        c.setCity(city);
        c.setMaintenanceCertExpDate(maintenanceCertExpDate);
        
        JOptionPane.showMessageDialog(this, "New Car Record Added");
        
        txtModelNum.setText("");
        txtSerialNum.setText("");
        txtManufacturer.setText("");
        txtManufacturedDate.setText("");
        txtSeatCapacity.setText("");
        txtUsedByPF.setText("");
        txtCity.setText("");
        txtMaintenanceCertExpDate.setText("");
        chkboxAvailable.setState(false);
    }//GEN-LAST:event_btnSaveActionPerformed

    private void txtModelNumKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtModelNumKeyPressed
        // TODO add your handling code here:
        

    }//GEN-LAST:event_txtModelNumKeyPressed

    private void txtSerialNumKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSerialNumKeyPressed
        // TODO add your handling code here:
        
        char modelNumKeyPressed = evt.getKeyChar();
        if(Character.isLetter(modelNumKeyPressed)){
            txtSerialNum.setEditable(false);
            lblSNErr.setText("Please enter number Only!");
        }
        else
        {
            txtSerialNum.setEditable(true);
            lblSNErr.setText("");
        }
    }//GEN-LAST:event_txtSerialNumKeyPressed

 
    
    private void txtManufacturedDateKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtManufacturedDateKeyPressed
        // TODO add your handling code here:
        
        
         char MDKeyPressed = evt.getKeyChar();
        if(Character.isAlphabetic(MDKeyPressed)){
            txtManufacturedDate.setEditable(false);
            lblManDateVali.setText("Invalid Format,  Allowed Only  MM/DD/YYYY!");
        }
        else
        {
            txtManufacturedDate.setEditable(true);
            lblManDateVali.setText("");
        }
                 
    }//GEN-LAST:event_txtManufacturedDateKeyPressed

    private void txtSeatCapacityKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSeatCapacityKeyPressed
        // TODO add your handling code here:
           
         char seatCap = evt.getKeyChar();
        if(Character.isLetter(seatCap)){
            txtSeatCapacity.setEditable(false);
            lblSeatCapVali.setText("Please enter number Only!");
        }
        else
        {
            txtSeatCapacity.setEditable(true);
            lblSeatCapVali.setText("");
        }
            
    }//GEN-LAST:event_txtSeatCapacityKeyPressed

    private void txtUsedByPFKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtUsedByPFKeyPressed
        // TODO add your handling code here:
                  
    }//GEN-LAST:event_txtUsedByPFKeyPressed

    private void txtCityKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCityKeyPressed
//        // TODO add your handling code here:
//        char city = evt.getKeyChar();
//        if(!Character.isAlphabetic(city)){
//            txtCity.setEditable(false);
//            lblcityVali.setText("Please enter alphabets Only!");
//        }
//        else
//        {
//            txtCity.setEditable(true);
//            lblcityVali.setText("");
//        }
        
    }//GEN-LAST:event_txtCityKeyPressed

    private void txtMaintenanceCertExpDateKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtMaintenanceCertExpDateKeyPressed
        // TODO add your handling code here:
                 char MCExpKeyPressed = evt.getKeyChar();
        if(Character.isAlphabetic(MCExpKeyPressed)){
            txtMaintenanceCertExpDate.setEditable(false);
            lblmanDateExpvali.setText("Invalid Format,  Allowed Only  MM/DD/YYYY!");
        }
        else
        {
            txtMaintenanceCertExpDate.setEditable(true);
            lblManDateVali.setText("");
        }
                 
    }//GEN-LAST:event_txtMaintenanceCertExpDateKeyPressed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnSave;
    private javax.swing.JLabel btnTitle;
    private java.awt.Checkbox chkboxAvailable;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel lblCarManufacturer;
    private javax.swing.JLabel lblCarModelNum;
    private javax.swing.JLabel lblCarSerialNum;
    private javax.swing.JLabel lblCity;
    private javax.swing.JLabel lblMaintenanceCertExpDate;
    private javax.swing.JLabel lblManDateVali;
    private javax.swing.JLabel lblManErr;
    private javax.swing.JLabel lblManufacturedDate;
    private javax.swing.JLabel lblPFVali;
    private javax.swing.JLabel lblSNErr;
    private javax.swing.JLabel lblSeatCapVali;
    private javax.swing.JLabel lblSeatCapacity;
    private javax.swing.JLabel lblUsedBy;
    private javax.swing.JLabel lblcityVali;
    private javax.swing.JLabel lblmanDateExpvali;
    private javax.swing.JLabel lblmodelErr;
    private javax.swing.JTextField txtCity;
    private javax.swing.JTextField txtMaintenanceCertExpDate;
    private javax.swing.JTextField txtManufacturedDate;
    private javax.swing.JTextField txtManufacturer;
    private javax.swing.JTextField txtModelNum;
    private javax.swing.JTextField txtSeatCapacity;
    private javax.swing.JTextField txtSerialNum;
    private javax.swing.JTextField txtUsedByPF;
    // End of variables declaration//GEN-END:variables
}
